<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EQMglogBEEvEAIglYgDEEjEAYokYALFEDIBYIgZALBEDIJaIARBLxACIJWIAxBIxAGKJGACxRAyAWCIG
        QCwRAyCWiAEQS8QAiCViAMQSMQBiiRgAsUQMgFgiBkAsEQMglogBEEvEAIglYgDEEjEAYokYALFEDIBY
        IgZALBEDIJaIARBLxACIJWIAxBIxAGKJGACxRAyAWCIGQCwRAyCWiAEQS8QAiCViAMQSMQBiiRgAsUQM
        gFgiBkAsEQMglogBEEvEAIglYgDEEjEAYokYALFEDIBYIgZALBEDIJaIARBLxACIJWIAxBIxAGKJGACx
        RAyAWCIGQCwRAyCWiAEQS8QAiCViAMQSMQBiiRgAsUQMgFgiBkAsEQMglogBEEvEAIglYgDEEjEAYokY
        ALFEDIBYIgZALBEDIJaIARBLxACIJWIAxBIxAGKJGACxRAyAWCIGQCwRAyCWiAEQS8QAiCViAMQSMQBi
        iRgAsUQMgFgiBkAsEQMglogBEEvEAIglYgDEEjEAYokYALFEDIBYIgZALBEDIJaIARBLxACIJWIAxBIx
        AGKJGACxRAyAWCIGQCwRAyCWiAEQS8QAiCViAMQSMQBiiRgAsUQMgFgiBkAsEQMglogBEEvEAIglYgDE
        EjEAYokYALFEDIBYIgZALBEDIJaIARBLxACIJWIAxBIxAGKJGACxRAyAWCIGQCwRAyCWiAEQS8QAiCVi
        AMQSMQBiiRgAsUQMgFgiBkAsEQMglogBEEvEAIglYgDEEjEAYokYALFEDIBYIgZALBEDIJaIARBLxACI
        JWIAxBIxAGKJGACxRAyAWCIGQCwRAyCWiAEQS8QAiCViAMQSMQBiiRgAsUQMgFgiBkAsEQMglogBEEvE
        AIglYgDEEjEAYokYALFEDIBYIgZALBEDIJaIARBLxACIJWIAxBIxAGKJGACxRAyAUH9f/g9XJUvYOMVk
        zQAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>44</value>
  </metadata>
</root>